// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['app/metronome', 'app/gl'], function(Metronome, GL) {
    var Game;
    return Game = (function() {
      function Game(FPS, canvasElementID, vertexShaderSource, fragmentShaderSource) {
        this.loop = __bind(this.loop, this);
        var shader;
        this.metronome = new Metronome(FPS);
        this.metronome.on("Tick", this.loop);
        this.gl = new GL(canvasElementID);
        shader = this.gl.createShaderProgram(fragmentShaderSource, vertexShaderSource);
        this.gl.setShader(shader);
      }

      Game.prototype.setCamera = function(camera) {
        this.camera = camera;
      };

      Game.prototype.addMesh = function(meshData) {
        var newMesh;
        newMesh = this.gl.createMeshFromObj(meshData);
        this.meshes || (this.meshes = []);
        this.meshes.push(newMesh);
        return newMesh;
      };

      Game.prototype.loop = function() {
        if (!(this.meshes && this.camera)) {
          return;
        }
        this.gl.drawScene(this.camera, this.meshes);
      };

      Game.prototype.start = function() {
        return this.metronome.start();
      };

      return Game;

    })();
  });

}).call(this);
