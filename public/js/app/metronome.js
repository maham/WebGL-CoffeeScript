// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['app/microevent', 'app/time'], function(MicroEvent, time) {
    var Metronome;
    Metronome = (function() {
      function Metronome(FPS) {
        this.tick = __bind(this.tick, this);
        this.timeBetweenTicks = 1 / FPS;
        this.lastT = null;
        this.timeAccumulator = 0;
      }

      Metronome.prototype.start = function() {
        this.lastT = Date.now();
        this.tick();
        this.emit("Start");
      };

      Metronome.prototype.stop = function() {
        var t;
        time.cancelAnimationFrame(this.tick);
        t = Date.now();
        this.timeAccumulator += (t - this.lastT) / 1000;
        this.emit("Stop");
      };

      Metronome.prototype.tick = function() {
        var t;
        time.requestAnimationFrame(this.tick);
        t = Date.now();
        this.timeAccumulator += (t - this.lastT) / 1000;
        while (this.timeAccumulator > this.timeBetweenTicks) {
          this.timeAccumulator -= this.timeBetweenTicks;
          this.emit("Tick");
        }
        this.lastT = t;
      };

      return Metronome;

    })();
    return MicroEvent.Mixin(Metronome);
  });

}).call(this);
